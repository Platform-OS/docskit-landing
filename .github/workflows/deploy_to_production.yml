name: Deploy to production

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy_production:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      MPKIT_URL: ${{ secrets.MPKIT_PROD_URL }}
      MPKIT_EMAIL: ${{ secrets.MPKIT_EMAIL }}
      MPKIT_TOKEN: ${{ secrets.MPKIT_TOKEN }}
      ASSET_PREFIX: ${{ vars.PROD_ASSET_PREFIX }}
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: master
          submodules: true

      - name: Set up Node.js and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: |
          cd src
          npm list

      - name: Install Dependencies
        run: |
          cd src
          npm install --legacy-peer-deps

      - name: Build
        run: |
          cd src
          npm run build

      - name: Deploy
        shell: sh
        run: |
          set -e
          npm -g install @platformos/pos-cli
          pos-cli deploy

